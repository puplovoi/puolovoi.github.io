<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>实验一</title>
      <link href="/2024/10/05/558433c7/"/>
      <url>/2024/10/05/558433c7/</url>
      
        <content type="html"><![CDATA[<figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 定义单链表节点结构体</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">struct</span> <span class="title class_">LNode</span> &#123;</span><br><span class="line">    <span class="type">char</span> data;</span><br><span class="line">    <span class="keyword">struct</span> <span class="title class_">LNode</span>* next;</span><br><span class="line">&#125; LinkNode;</span><br><span class="line"><span class="comment">// 初始化链表</span></span><br><span class="line"> <span class="function"><span class="type">void</span> <span class="title">InitList</span><span class="params">(LinkNode *&amp;L)</span></span>;</span><br><span class="line"><span class="comment">// 尾插法插入节点</span></span><br><span class="line"> <span class="function"><span class="type">void</span> <span class="title">Insert</span><span class="params">(LinkNode *&amp;L,<span class="type">char</span> x)</span></span>;</span><br><span class="line"> <span class="comment">// 打印链表</span></span><br><span class="line"> <span class="function"><span class="type">void</span> <span class="title">PrintList</span><span class="params">(LinkNode *L)</span></span>;</span><br><span class="line"> <span class="comment">// 销毁链表</span></span><br><span class="line"> <span class="function"><span class="type">void</span> <span class="title">DestroyList</span><span class="params">(LinkNode *&amp;L)</span></span>;</span><br><span class="line"> <span class="comment">// 输出单链表的长度</span></span><br><span class="line"> <span class="function"><span class="type">int</span> <span class="title">Length</span><span class="params">(LinkNode *L)</span></span>;</span><br><span class="line"><span class="comment">//输出单链表第x个元素</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">GetElem</span><span class="params">(LinkNode *L,<span class="type">int</span> x)</span></span>;</span><br><span class="line"><span class="comment">//输出某个元素的位置</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">LocateElem</span><span class="params">(LinkNode *L,<span class="type">char</span> x)</span></span>;</span><br><span class="line"><span class="comment">//尾插法在第a个位置插入元素x</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">InsertElem</span><span class="params">(LinkNode *&amp;L,<span class="type">char</span> x,<span class="type">int</span> a)</span></span>;</span><br><span class="line"> <span class="comment">// 输出单链表是否为空</span></span><br><span class="line"> <span class="function"><span class="type">int</span> <span class="title">IsEmpty</span><span class="params">(LinkNode *L)</span></span>;</span><br><span class="line"><span class="comment">//删除链表第a个元素</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">DeleteElem</span><span class="params">(LinkNode *&amp;L,<span class="type">int</span> a)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    LinkNode *L=<span class="literal">NULL</span>;</span><br><span class="line">    <span class="built_in">InitList</span>(L);<span class="comment">//初始化链表</span></span><br><span class="line">    <span class="built_in">Insert</span>(L,<span class="string">&#x27;a&#x27;</span>);</span><br><span class="line">    <span class="built_in">Insert</span>(L,<span class="string">&#x27;b&#x27;</span>);</span><br><span class="line">    <span class="built_in">Insert</span>(L,<span class="string">&#x27;c&#x27;</span>);</span><br><span class="line">    <span class="built_in">Insert</span>(L,<span class="string">&#x27;d&#x27;</span>);</span><br><span class="line">    <span class="built_in">Insert</span>(L,<span class="string">&#x27;e&#x27;</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;链表插入元素后:\n&quot;</span>);</span><br><span class="line">    <span class="built_in">PrintList</span>(L);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;链表的长度为:%d\n&quot;</span>,<span class="built_in">Length</span>(L)); <span class="comment">//输出链表长度</span></span><br><span class="line">    <span class="keyword">if</span>(<span class="built_in">IsEmpty</span>(L))    <span class="comment">//链表为空</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;链表为空!\n&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span>    <span class="comment">//链表不为空</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;链表不为空!\n&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">LocateElem</span>(L,<span class="string">&#x27;c&#x27;</span>);    <span class="comment">//输出c元素位置</span></span><br><span class="line">    <span class="built_in">GetElem</span>(L,<span class="number">3</span>);    <span class="comment">//输出第3个元素</span></span><br><span class="line">    <span class="built_in">InsertElem</span>(L,<span class="string">&#x27;f&#x27;</span>,<span class="number">4</span>); <span class="comment">//在第4个位置插入元素f</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;插入元素f后:\n&quot;</span>);</span><br><span class="line">    <span class="built_in">PrintList</span>(L);</span><br><span class="line">    <span class="built_in">DeleteElem</span>(L,<span class="number">2</span>); <span class="comment">//删除第2个元素</span></span><br><span class="line">    <span class="built_in">DestroyList</span>(L);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"> <span class="function"><span class="type">void</span> <span class="title">InitList</span><span class="params">(LinkNode *&amp;L)</span></span></span><br><span class="line"><span class="function"> </span>&#123;</span><br><span class="line">    L=(LinkNode *)<span class="built_in">malloc</span>(<span class="built_in">sizeof</span>(LinkNode));    <span class="comment">//创建头结点</span></span><br><span class="line">    L-&gt;next=<span class="literal">NULL</span>;</span><br><span class="line"> &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="type">void</span> <span class="title">Insert</span><span class="params">(LinkNode *&amp;L,<span class="type">char</span> x)</span></span></span><br><span class="line"><span class="function"> </span>&#123;</span><br><span class="line">    LinkNode *p=(LinkNode *)<span class="built_in">malloc</span>(<span class="built_in">sizeof</span>(LinkNode));</span><br><span class="line">    p-&gt;data=x;</span><br><span class="line">    p-&gt;next=<span class="literal">NULL</span>;</span><br><span class="line">    LinkNode *q=L;</span><br><span class="line">    <span class="keyword">while</span>(q-&gt;next!=<span class="literal">NULL</span>)    <span class="comment">//找到尾节点</span></span><br><span class="line">    &#123;</span><br><span class="line">        q=q-&gt;next;</span><br><span class="line">    &#125;</span><br><span class="line">    q-&gt;next=p;    <span class="comment">//插入到尾节点后</span></span><br><span class="line"> &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="type">void</span> <span class="title">PrintList</span><span class="params">(LinkNode *L)</span></span></span><br><span class="line"><span class="function"> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(L-&gt;next==<span class="literal">NULL</span>)    <span class="comment">//链表为空</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;链表为空!\n&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    LinkNode *p=L-&gt;next;</span><br><span class="line">    <span class="keyword">while</span>(p!=<span class="literal">NULL</span>)    <span class="comment">//遍历链表</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%c &quot;</span>,p-&gt;data);</span><br><span class="line">        p=p-&gt;next;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line"> &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="type">void</span> <span class="title">DestroyList</span><span class="params">(LinkNode *&amp;L)</span></span></span><br><span class="line"><span class="function"> </span>&#123;</span><br><span class="line">    LinkNode *p=L-&gt;next;</span><br><span class="line">    LinkNode *q;</span><br><span class="line">    <span class="keyword">while</span>(p!=<span class="literal">NULL</span>)    <span class="comment">//遍历链表</span></span><br><span class="line">    &#123;</span><br><span class="line">        q=p;</span><br><span class="line">        p=p-&gt;next;</span><br><span class="line">        <span class="built_in">free</span>(q);    <span class="comment">//释放节点</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">free</span>(L);    <span class="comment">//释放头结点</span></span><br><span class="line">    L=<span class="literal">NULL</span>;</span><br><span class="line"> &#125;</span><br><span class="line"></span><br><span class="line"> <span class="function"><span class="type">int</span> <span class="title">Length</span><span class="params">(LinkNode *L)</span></span></span><br><span class="line"><span class="function"> </span>&#123;</span><br><span class="line">    <span class="type">int</span> len=<span class="number">0</span>;</span><br><span class="line">    LinkNode *p=L-&gt;next;</span><br><span class="line">    <span class="keyword">while</span>(p!=<span class="literal">NULL</span>)    <span class="comment">//遍历链表</span></span><br><span class="line">    &#123;</span><br><span class="line">        len++;</span><br><span class="line">        p=p-&gt;next;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> len;</span><br><span class="line"> &#125; </span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">GetElem</span><span class="params">(LinkNode *L,<span class="type">int</span> x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> i=<span class="number">1</span>;</span><br><span class="line">    LinkNode *p=L-&gt;next;</span><br><span class="line">    <span class="keyword">while</span>(p!=<span class="literal">NULL</span>)    <span class="comment">//遍历链表</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(i==x)    <span class="comment">//找到第x个元素</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;%d的元素是:%c\n&quot;</span>, x, p-&gt;data); <span class="comment">//输出元素</span></span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        i++;</span><br><span class="line">        p=p-&gt;next;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;未找到第%d个元素!\n&quot;</span>, x);</span><br><span class="line">    <span class="keyword">return</span>;    <span class="comment">//未找到第x个元素</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">LocateElem</span><span class="params">(LinkNode *L,<span class="type">char</span> x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> i=<span class="number">0</span>;</span><br><span class="line">    LinkNode *p=L;</span><br><span class="line">    <span class="keyword">while</span>(p!=<span class="literal">NULL</span>)    <span class="comment">//遍历链表</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(p-&gt;data==x)    <span class="comment">//找到元素</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;%c的位置是:%d\n&quot;</span>, x, i); <span class="comment">//输出元素位置</span></span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        i++;</span><br><span class="line">        p=p-&gt;next;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%c元素不存在!\n&quot;</span>, x);</span><br><span class="line">    <span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">InsertElem</span><span class="params">(LinkNode *&amp;L,<span class="type">char</span> x,<span class="type">int</span> a)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    LinkNode *p = L;</span><br><span class="line">    <span class="type">int</span> i = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">while</span> (p!=<span class="literal">NULL</span> &amp;&amp; i&lt;a)    <span class="comment">//找到第a-1个元素</span></span><br><span class="line">    &#123;</span><br><span class="line">        p=p-&gt;next;</span><br><span class="line">        i++;</span><br><span class="line">    &#125;</span><br><span class="line">     <span class="keyword">if</span> (p==<span class="literal">NULL</span>)    <span class="comment">//链表长度小于a，插入到尾节点后   </span></span><br><span class="line">     &#123;</span><br><span class="line">        <span class="built_in">Insert</span>(L,x);</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">     &#125;</span><br><span class="line">     LinkNode *q=(LinkNode *)<span class="built_in">malloc</span>(<span class="built_in">sizeof</span>(LinkNode));    <span class="comment">//创建新节点</span></span><br><span class="line">     q-&gt;data=x;</span><br><span class="line">     q-&gt;next=p-&gt;next;</span><br><span class="line">     p-&gt;next=q;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"> <span class="function"><span class="type">int</span> <span class="title">IsEmpty</span><span class="params">(LinkNode *L)</span></span></span><br><span class="line"><span class="function"> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> L-&gt;next==<span class="literal">NULL</span>;</span><br><span class="line"> &#125;</span><br><span class="line"></span><br><span class="line"> <span class="function"><span class="type">void</span> <span class="title">DeleteElem</span><span class="params">(LinkNode *&amp;L,<span class="type">int</span> a)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    LinkNode *p=L;</span><br><span class="line">    <span class="type">int</span> i=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">while</span>(p!=<span class="literal">NULL</span> &amp;&amp; i&lt;a)    <span class="comment">//找到第a-1个元素</span></span><br><span class="line">    &#123;</span><br><span class="line">        p=p-&gt;next;</span><br><span class="line">        i++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(p==<span class="literal">NULL</span>)    <span class="comment">//链表长度小于a，不删除</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;链表长度小于%d，不删除!\n&quot;</span>, a);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;链表未改变:\n&quot;</span>);</span><br><span class="line">        <span class="built_in">PrintList</span>(L);</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    LinkNode *q=p-&gt;next;</span><br><span class="line">    p-&gt;next=q-&gt;next;</span><br><span class="line">    <span class="built_in">free</span>(q);    <span class="comment">//释放节点</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;删除第%d个元素后:\n&quot;</span>, a);</span><br><span class="line">    <span class="built_in">PrintList</span>(L);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 数据结构 </category>
          
          <category> 实验 </category>
          
      </categories>
      
      
    </entry>
    
    
  
  
</search>
